#include "ZombieHitEvent.h"

BYTE hook_700010[] = {
	0x89,0x35,0x00,0x00,0x70,0x00,0xA3,0x04,
	0x00,0x70,0x00,0x50,0x8B,0x44,0x24,0x08,
	0xA3,0x08,0x00,0x70,0x00,0xC7,0x05,0x0C,
	0x00,0x70,0x00,0x01,0x00,0x00,0x00,0x83,
	0x3D,0x0C,0x00,0x70,0x00,0x01,0x74,0xF7,
	0xA1,0x08,0x00,0x70,0x00,0x89,0x44,0x24,
	0x08,0x58,0x51,0x8B,0x4E,0x28,0x83,0xF9,
	0x10,0xE9,0x79,0x17,0xE3,0xFF };

BYTE hook_5317C0[] = { 0xE9,0x4B,0xE8,0x1C,0x00,0x66,0x90 };

BYTE hook_5317C0_raw[] = { 0x51,0x8B,0x4E,0x28,0x83,0xF9,0x10 };

void ZombieHitEvent::start()
{
	PVZ::Memory::WriteArray<BYTE>(0x700010, hook_700010, sizeof(hook_700010));
	PVZ::Memory::WriteArray<BYTE>(0x5317C0, hook_5317C0, sizeof(hook_5317C0));
}

void ZombieHitEvent::run()
{
	int code = PVZ::Memory::ReadMemory<DWORD>(0x70000C);
	if (code == 0) return;

	std::shared_ptr<PVZ::Zombie> zombie = std::make_shared<PVZ::Zombie>(PVZ::Memory::ReadMemory<DWORD>(0x700000));
	DamageType::DamageType type = (DamageType::DamageType)PVZ::Memory::ReadMemory<DWORD>(0x700004);
	int amount = PVZ::Memory::ReadMemory<DWORD>(0x700008);

	for (int i = 0; i < listeners.size(); i++)
	{
		amount = listeners[i](zombie, type, amount);
	}

	PVZ::Memory::WriteMemory<DWORD>(0x70000C, 0);
}

void ZombieHitEvent::end()
{
	PVZ::Memory::WriteArray<BYTE>(0x5317C0, hook_5317C0_raw, sizeof(hook_5317C0_raw));
}


